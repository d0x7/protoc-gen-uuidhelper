// Code generated by protoc-gen-uuidhelper-go. DO NOT EDIT.
// Versions:
// - protoc-gen-uuidhelper-go v0.0.2-dev.9+dirty
// - protoc v5.29.3
// source: test.proto

package gen

import "github.com/google/uuid"

func (m *Player) GetInternalUUID() uuid.UUID {
	return uuid.Must(uuid.FromBytes(m.GetInternalUuid()))
}

func (m *Player) SetInternalUUID(u uuid.UUID) {
	m.InternalUuid = u[:]
}

func (m *Player) GetSessionUUID() uuid.UUID {
	return uuid.Must(uuid.FromBytes(m.GetSessionUuid()))
}

func (m *Player) SetSessionUUID(u uuid.UUID) {
	m.SessionUuid = u[:]
}

func (m *Player) GetGameUUIDs() []uuid.UUID {
	uuids := m.GetGameUuids()
	if len(uuids) == 0 {
		return nil
	}
	uuidsSlice := make([]uuid.UUID, len(uuids))
	for i, uid := range uuids {
		if len(uid) != 16 {
			return nil
		}
		uuidsSlice[i] = uuid.Must(uuid.FromBytes(uid))
	}
	return uuidsSlice
}

func (m *Player) SetGameUUIDs(u []uuid.UUID) {
	if len(u) == 0 {
		m.GameUuids = nil
		return
	}
	uuids := make([][]byte, len(u))
	for i, uid := range u {
		uuids[i] = uid[:]
	}
	m.GameUuids = uuids
}

func (m *Player) AddGameUUIDs(u ...uuid.UUID) {
	if m.GameUuids == nil {
		m.GameUuids = make([][]byte, 0, len(u))
	}
	for _, id := range u {
		m.GameUuids = append(m.GameUuids, id[:])
	}
}
